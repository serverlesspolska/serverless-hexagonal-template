service: serverless-hexagonal-template

frameworkVersion: '^3'

plugins:
  - serverless-iam-roles-per-function
  - serverless-export-env
  - serverless-plugin-scripts

provider:
  name: aws
  stage: ${opt:stage, file(./config/stage.cjs):userStage}
  runtime: nodejs20.x
  region: ${opt:region, self:custom.deployment.region.${self:custom.globalStage}}
  logRetentionInDays: 60 # how long logs are kept in CloudWatch
  deploymentMethod: direct
  environment:
    # required Environment Variables. Don't remove.
    stage: ${self:provider.stage}
    region: ${self:provider.region}
    service: ${self:service}
    POWERTOOLS_SERVICE_NAME: ${self:service}
    # your variables - optional
    httpApiGatewayEndpointId: !Ref HttpApi
  tags:
    Application: ${self:service}
    Stage: ${self:provider.stage}

configValidationMode: warn

custom:
  deployment: ${file(config/deployment.yml):deployment}
  globalStage: ${self:custom.deployment.globalStages.${self:provider.stage}, 'dev'}
  description: Your short project description that will be shown in Lambda -> Applications console & in CloudFormation stack
  tableName: ${self:service}-${self:provider.stage}
  export-env: # serverless-export-env config
    filename: .awsenv # custom filename to avoid conflict with Serverless Framework '.env' auto loading feature
    overwrite: true
  scripts:
    hooks:
      'before:package:createDeploymentArtifacts': npm run build

functions: ${file(iac/functions.yml)}

package:
  patterns:
    # exclude
    - '!__tests__/**'
    - '!documentation/**'
    - '!config/**'
    - '!iac/**'
    - '!src/**/schema.*.json'
    - '!*'

resources:
  - Description: ${self:custom.description}
  # define each resource in a separate file per service in `iac` folder
  - ${file(iac/dynamodb.yml)}
